generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  output          = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public"]
}

model Alarm {
  einsatznummer    String  @id
  datum            String
  einsatzstichwort String?
  staerke          Int?
  einsatzort       String?
  kommentar        String?

  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@schema("public")
}

model Mitglied {
  id           Int              @id @default(autoincrement())
  nachname     String
  vorname      String
  geburtsdatum DateTime?        @db.Date
  email        String?
  telefon      Telefon[]
  strasse      String?
  stadt        String?
  postleitzahl String?
  gruppen      GruppeMitglied[]

  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@schema("public")
}

model Gruppe {
  id         Int              @id @default(autoincrement())
  name       String           @unique
  mitglieder GruppeMitglied[]

  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@schema("public")
}

model GruppeMitglied {
  id             Int       @id @default(autoincrement())
  gruppeId       Int
  gruppe         Gruppe    @relation(fields: [gruppeId], references: [id])
  mitgliedId     Int
  mitglied       Mitglied  @relation(fields: [mitgliedId], references: [id])
  position       String
  beitrittsdatum DateTime? @db.Date

  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@schema("public")
}

model TelefonTag {
  id      String    @id @default(uuid())
  name    String
  telefon Telefon[]

  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@schema("public")
}

model Telefon {
  id            String      @id @default(uuid())
  telefonnummer String
  tag           TelefonTag? @relation(fields: [telefonTagId], references: [id])
  telefonTagId  String?
  mitglied      Mitglied?   @relation(fields: [mitgliedId], references: [id])
  mitgliedId    Int?

  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@schema("public")
}
